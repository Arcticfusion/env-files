#!/bin/zsh
name_="zshrc"
if ! [ -n "${_ZSHRC_INIT}" ]; then
  export _ZSHRC_INIT="True"
else
  >&2 echo "Already Initialising $name_"
  exit
fi
>&2 echo "Initialising $name_"
unset name_
# ZSHRC START

autoload -Uz compinit && compinit
autoload -Uz bashcompinit && bashcompinit

export ENV_REPO=$(readlink -f "$HOME/.zshrc" 2>/dev/null | sed 's#/[^/]*$##')
&>/dev/null source "$ENV_REPO/env.tools" || 1>&2 echo "ERROR: Unable to initialise '$ENV_REPO/env.tools'"

if [ -f "$ENV_REPO/rc" ]; then
  source "$ENV_REPO/rc"
  __user="$_USER_NAME"
  __host="$_HOST_NAME"
else
  __user='%n'
  __host='%m'
fi
# Update the Command prompt, PS1
# Original PS1 = "%n@%m %1~ %#"
# Inspired PS1 with Arguments
# user@host 2-lvl-dir-from-home-dir %
# "%n@%m %2~ %#"

export PS1="%F{cyan}${__user}%f@%F{green}${__host}%f %F{yellow}%2~%f %# "
unset __user __host

test -e "${ENV_REPO}/iterm2_shell_integration.zsh" &&
  source "${ENV_REPO}/iterm2_shell_integration.zsh" || test true

test -e "/Users/${USER}/Applications/homebrew/bin/brew" &&
  eval "$(/Users/${USER}/Applications/homebrew/bin/brew shellenv)"

test -e "/Applications/Visual Studio Code.app/Contents/Resources/app/bin/code" \
  && export PATH="/Applications/Visual Studio Code.app/Contents/Resources/app/bin:${PATH}"

# Conda Block - Automated
# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/opt/homebrew/Caskroom/miniconda/base/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/opt/homebrew/Caskroom/miniconda/base/etc/profile.d/conda.sh" ]; then
        . "/opt/homebrew/Caskroom/miniconda/base/etc/profile.d/conda.sh"
    else
        export PATH="/opt/homebrew/Caskroom/miniconda/base/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# Conda Block - Personalised
load_env_file conda.sh

# ZSHRC END
unset _ZSHRC_INIT

